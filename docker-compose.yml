version: '3.8'

services:

  permission_service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      DB_URL: jdbc:postgresql://db_permission:5432/permission-db
      DB_HOST: db_permission
      DB_PORT: 5432
      DB_NAME: permission-db
      DB_USER: sa
      DB_PASSWORD: password


  db_permission:
    container_name: db_permission
    image: postgres:12
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: permission-db
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${AUTH_SERVER_URI}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    volumes:
      - data_permission:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa"]
      interval: 30s
      retries: 5

volumes:
  data_permission:
    external: false
