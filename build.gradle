plugins {
	id 'org.springframework.boot' version '3.0.0'  // Make sure you are using a supported Spring Boot version
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '1.9.10'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.10'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.10'
}

group = 'com.github.teamverdeingsis'
version = '0.0.2-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	// PostgreSQL or any other database
	runtimeOnly 'org.postgresql:postgresql'

	// Kotlin dependencies
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

	// Mocking and testing for Auth0 integration
	testImplementation 'org.mockito:mockito-core:5.4.0'
	testImplementation 'org.mockito.kotlin:mockito-kotlin:5.0.0'
	testImplementation 'org.springframework.security:spring-security-test'  // For testing Spring Security
	testImplementation 'io.rest-assured:rest-assured:5.3.0'  // Optional, for more advanced HTTP testing

	// Jakarta Persistence API (JPA) for handling entities
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	// Otras dependencias relacionadas que puedas necesitar
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'  // Para anotaciones generales

}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	enabled = true
}

bootRun {
	mainClass.set('com.github.teamverdeingsis.permission.PermissionServiceApplication')
}
